'use strict';

/* jshint ignore:start */
/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */
/* jshint ignore:end */

var Holodeck = require('../../../holodeck');  /* jshint ignore:line */
var Request = require(
    '../../../../../lib/http/request');  /* jshint ignore:line */
var Response = require(
    '../../../../../lib/http/response');  /* jshint ignore:line */
var RestException = require(
    '../../../../../lib/base/RestException');  /* jshint ignore:line */
var Twilio = require('../../../../../lib');  /* jshint ignore:line */


var client;
var holodeck;

describe('ByocTrunk', function() {
  beforeEach(function() {
    holodeck = new Holodeck();
    client = new Twilio('ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', 'AUTHTOKEN', {
      httpClient: holodeck
    });
  });
  it('should generate valid create request',
    function(done) {
      holodeck.mock(new Response(500, {}));

      var promise = client.voice.v1.byocTrunks.create();
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var url = 'https://voice.twilio.com/v1/ByocTrunks';

      holodeck.assertHasRequest(new Request({
        method: 'POST',
        url: url
      }));
    }
  );
  it('should generate valid create response',
    function(done) {
      var body = {
          'account_sid': 'ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'sid': 'BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'friendly_name': 'friendly_name',
          'voice_url': 'https://byoc.example.com/twilio/app',
          'voice_method': 'POST',
          'voice_fallback_method': 'POST',
          'voice_fallback_url': 'https://byoc.example.com/twilio/fallback',
          'status_callback_method': 'POST',
          'status_callback_url': 'https://byoc.example.com/twilio/status_callback',
          'cnam_lookup_enabled': false,
          'connection_policy_sid': 'NYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'from_domain_sid': 'SDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'date_created': '2020-03-18T23:31:36Z',
          'date_updated': '2020-03-18T23:31:36Z',
          'url': 'https://voice.twilio.com/v1/ByocTrunks/BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
      };

      holodeck.mock(new Response(201, body));

      var promise = client.voice.v1.byocTrunks.create();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
  it('should generate valid fetch request',
    function(done) {
      holodeck.mock(new Response(500, {}));

      var promise = client.voice.v1.byocTrunks('BYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX').fetch();
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var sid = 'BYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      var url = `https://voice.twilio.com/v1/ByocTrunks/${sid}`;

      holodeck.assertHasRequest(new Request({
        method: 'GET',
        url: url
      }));
    }
  );
  it('should generate valid fetch response',
    function(done) {
      var body = {
          'account_sid': 'ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'sid': 'BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'friendly_name': 'friendly_name',
          'voice_url': 'https://byoc.example.com/twilio/app',
          'voice_method': 'POST',
          'voice_fallback_method': 'POST',
          'voice_fallback_url': 'https://byoc.example.com/twilio/fallback',
          'status_callback_method': 'POST',
          'status_callback_url': 'https://byoc.example.com/twilio/status_callback',
          'cnam_lookup_enabled': false,
          'connection_policy_sid': 'NYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'from_domain_sid': 'SDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'date_created': '2020-03-18T23:31:36Z',
          'date_updated': '2020-03-18T23:31:37Z',
          'url': 'https://voice.twilio.com/v1/ByocTrunks/BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
      };

      holodeck.mock(new Response(200, body));

      var promise = client.voice.v1.byocTrunks('BYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX').fetch();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
  it('should treat the first each arg as a callback',
    function(done) {
      var body = {
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://voice.twilio.com/v1/ByocTrunks?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://voice.twilio.com/v1/ByocTrunks?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'byoc_trunks'
          },
          'byoc_trunks': [
              {
                  'account_sid': 'ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'sid': 'BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'friendly_name': 'friendly_name',
                  'voice_url': 'https://byoc.example.com/twilio/app',
                  'voice_method': 'POST',
                  'voice_fallback_method': 'POST',
                  'voice_fallback_url': 'https://byoc.example.com/twilio/fallback',
                  'status_callback_method': 'POST',
                  'status_callback_url': 'https://byoc.example.com/twilio/status_callback',
                  'cnam_lookup_enabled': false,
                  'connection_policy_sid': 'NYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'from_domain_sid': 'SDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'date_created': '2020-03-18T23:31:36Z',
                  'date_updated': '2020-03-18T23:31:37Z',
                  'url': 'https://voice.twilio.com/v1/ByocTrunks/BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
              }
          ]
      };
      holodeck.mock(new Response(200, body));
      client.voice.v1.byocTrunks.each(() => done());
    }
  );
  it('should treat the second arg as a callback',
    function(done) {
      var body = {
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://voice.twilio.com/v1/ByocTrunks?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://voice.twilio.com/v1/ByocTrunks?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'byoc_trunks'
          },
          'byoc_trunks': [
              {
                  'account_sid': 'ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'sid': 'BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'friendly_name': 'friendly_name',
                  'voice_url': 'https://byoc.example.com/twilio/app',
                  'voice_method': 'POST',
                  'voice_fallback_method': 'POST',
                  'voice_fallback_url': 'https://byoc.example.com/twilio/fallback',
                  'status_callback_method': 'POST',
                  'status_callback_url': 'https://byoc.example.com/twilio/status_callback',
                  'cnam_lookup_enabled': false,
                  'connection_policy_sid': 'NYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'from_domain_sid': 'SDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'date_created': '2020-03-18T23:31:36Z',
                  'date_updated': '2020-03-18T23:31:37Z',
                  'url': 'https://voice.twilio.com/v1/ByocTrunks/BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
              }
          ]
      };
      holodeck.mock(new Response(200, body));
      client.voice.v1.byocTrunks.each({pageSize: 20}, () => done());
      holodeck.assertHasRequest(new Request({
          method: 'GET',
          url: 'https://voice.twilio.com/v1/ByocTrunks',
          params: {PageSize: 20},
      }));
    }
  );
  it('should find the callback in the opts object',
    function(done) {
      var body = {
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://voice.twilio.com/v1/ByocTrunks?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://voice.twilio.com/v1/ByocTrunks?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'byoc_trunks'
          },
          'byoc_trunks': [
              {
                  'account_sid': 'ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'sid': 'BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'friendly_name': 'friendly_name',
                  'voice_url': 'https://byoc.example.com/twilio/app',
                  'voice_method': 'POST',
                  'voice_fallback_method': 'POST',
                  'voice_fallback_url': 'https://byoc.example.com/twilio/fallback',
                  'status_callback_method': 'POST',
                  'status_callback_url': 'https://byoc.example.com/twilio/status_callback',
                  'cnam_lookup_enabled': false,
                  'connection_policy_sid': 'NYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'from_domain_sid': 'SDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'date_created': '2020-03-18T23:31:36Z',
                  'date_updated': '2020-03-18T23:31:37Z',
                  'url': 'https://voice.twilio.com/v1/ByocTrunks/BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
              }
          ]
      };
      holodeck.mock(new Response(200, body));
      client.voice.v1.byocTrunks.each({callback: () => done()}, () => fail('wrong callback!'));
    }
  );
  it('should generate valid list request',
    function(done) {
      holodeck.mock(new Response(500, {}));

      var promise = client.voice.v1.byocTrunks.list();
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var url = 'https://voice.twilio.com/v1/ByocTrunks';

      holodeck.assertHasRequest(new Request({
        method: 'GET',
        url: url
      }));
    }
  );
  it('should generate valid read_full response',
    function(done) {
      var body = {
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://voice.twilio.com/v1/ByocTrunks?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://voice.twilio.com/v1/ByocTrunks?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'byoc_trunks'
          },
          'byoc_trunks': [
              {
                  'account_sid': 'ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'sid': 'BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'friendly_name': 'friendly_name',
                  'voice_url': 'https://byoc.example.com/twilio/app',
                  'voice_method': 'POST',
                  'voice_fallback_method': 'POST',
                  'voice_fallback_url': 'https://byoc.example.com/twilio/fallback',
                  'status_callback_method': 'POST',
                  'status_callback_url': 'https://byoc.example.com/twilio/status_callback',
                  'cnam_lookup_enabled': false,
                  'connection_policy_sid': 'NYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'from_domain_sid': 'SDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'date_created': '2020-03-18T23:31:36Z',
                  'date_updated': '2020-03-18T23:31:37Z',
                  'url': 'https://voice.twilio.com/v1/ByocTrunks/BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
              }
          ]
      };

      holodeck.mock(new Response(200, body));

      var promise = client.voice.v1.byocTrunks.list();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
  it('should generate valid read_empty response',
    function(done) {
      var body = {
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://voice.twilio.com/v1/ByocTrunks?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://voice.twilio.com/v1/ByocTrunks?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'byoc_trunks'
          },
          'byoc_trunks': []
      };

      holodeck.mock(new Response(200, body));

      var promise = client.voice.v1.byocTrunks.list();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
  it('should generate valid update request',
    function(done) {
      holodeck.mock(new Response(500, {}));

      var promise = client.voice.v1.byocTrunks('BYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX').update();
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var sid = 'BYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      var url = `https://voice.twilio.com/v1/ByocTrunks/${sid}`;

      holodeck.assertHasRequest(new Request({
        method: 'POST',
        url: url
      }));
    }
  );
  it('should generate valid update response',
    function(done) {
      var body = {
          'account_sid': 'ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'sid': 'BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'friendly_name': 'update_name',
          'voice_url': 'https://byoc.example.com/twilio_updated/app',
          'voice_method': 'GET',
          'voice_fallback_method': 'GET',
          'voice_fallback_url': 'https://byoc.example.com/twilio_updated/fallback',
          'status_callback_method': 'GET',
          'status_callback_url': 'https://byoc.example.com/twilio_updated/status_callback',
          'cnam_lookup_enabled': true,
          'connection_policy_sid': 'NYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab',
          'from_domain_sid': 'SDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab',
          'date_created': '2020-03-18T23:31:36Z',
          'date_updated': '2020-03-18T23:31:37Z',
          'url': 'https://voice.twilio.com/v1/ByocTrunks/BYaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
      };

      holodeck.mock(new Response(200, body));

      var promise = client.voice.v1.byocTrunks('BYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX').update();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
  it('should generate valid remove request',
    function(done) {
      holodeck.mock(new Response(500, {}));

      var promise = client.voice.v1.byocTrunks('BYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX').remove();
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var sid = 'BYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      var url = `https://voice.twilio.com/v1/ByocTrunks/${sid}`;

      holodeck.assertHasRequest(new Request({
        method: 'DELETE',
        url: url
      }));
    }
  );
  it('should generate valid delete response',
    function(done) {
      var body = null;

      holodeck.mock(new Response(204, body));

      var promise = client.voice.v1.byocTrunks('BYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX').remove();
      promise.then(function(response) {
        expect(response).toBe(true);
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
});
